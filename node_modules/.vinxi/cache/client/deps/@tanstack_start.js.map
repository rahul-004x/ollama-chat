{
  "version": 3,
  "sources": ["../../../../.pnpm/jsesc@3.0.2/node_modules/jsesc/jsesc.js", "../../../../.pnpm/@tanstack+start@1.76.1_@types+node@22.7.8_ioredis@5.4.1_react-dom@18.3.1_react@18.3.1___ef9092069f79f3b55405bc0b3508b65c/node_modules/@tanstack/start/src/client/Asset.tsx", "../../../../.pnpm/@tanstack+start@1.76.1_@types+node@22.7.8_ioredis@5.4.1_react-dom@18.3.1_react@18.3.1___ef9092069f79f3b55405bc0b3508b65c/node_modules/@tanstack/start/src/client/createServerFn.ts", "../../../../.pnpm/@tanstack+start@1.76.1_@types+node@22.7.8_ioredis@5.4.1_react-dom@18.3.1_react@18.3.1___ef9092069f79f3b55405bc0b3508b65c/node_modules/@tanstack/start/src/client/DehydrateRouter.tsx", "../../../../.pnpm/@tanstack+start@1.76.1_@types+node@22.7.8_ioredis@5.4.1_react-dom@18.3.1_react@18.3.1___ef9092069f79f3b55405bc0b3508b65c/node_modules/@tanstack/start/src/client/json.ts", "../../../../.pnpm/@tanstack+react-cross-context@1.74.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tanstack/react-cross-context/src/Context.ts", "../../../../.pnpm/@tanstack+start@1.76.1_@types+node@22.7.8_ioredis@5.4.1_react-dom@18.3.1_react@18.3.1___ef9092069f79f3b55405bc0b3508b65c/node_modules/@tanstack/start/src/client/Meta.tsx", "../../../../.pnpm/@tanstack+start@1.76.1_@types+node@22.7.8_ioredis@5.4.1_react-dom@18.3.1_react@18.3.1___ef9092069f79f3b55405bc0b3508b65c/node_modules/@tanstack/start/src/client/Scripts.tsx", "../../../../.pnpm/@tanstack+start@1.76.1_@types+node@22.7.8_ioredis@5.4.1_react-dom@18.3.1_react@18.3.1___ef9092069f79f3b55405bc0b3508b65c/node_modules/@tanstack/start/src/client/serialization.tsx", "../../../../.pnpm/@tanstack+start@1.76.1_@types+node@22.7.8_ioredis@5.4.1_react-dom@18.3.1_react@18.3.1___ef9092069f79f3b55405bc0b3508b65c/node_modules/@tanstack/start/src/client/StartClient.tsx", "../../../../.pnpm/@tanstack+start@1.76.1_@types+node@22.7.8_ioredis@5.4.1_react-dom@18.3.1_react@18.3.1___ef9092069f79f3b55405bc0b3508b65c/node_modules/@tanstack/start/src/client/headers.ts", "../../../../.pnpm/@tanstack+start@1.76.1_@types+node@22.7.8_ioredis@5.4.1_react-dom@18.3.1_react@18.3.1___ef9092069f79f3b55405bc0b3508b65c/node_modules/@tanstack/start/src/client/renderRSC.tsx", "../../../../.pnpm/@tanstack+start@1.76.1_@types+node@22.7.8_ioredis@5.4.1_react-dom@18.3.1_react@18.3.1___ef9092069f79f3b55405bc0b3508b65c/node_modules/@tanstack/start/src/client/useServerFn.ts"],
  "sourcesContent": ["'use strict';\n\nconst object = {};\nconst hasOwnProperty = object.hasOwnProperty;\nconst forOwn = (object, callback) => {\n\tfor (const key in object) {\n\t\tif (hasOwnProperty.call(object, key)) {\n\t\t\tcallback(key, object[key]);\n\t\t}\n\t}\n};\n\nconst extend = (destination, source) => {\n\tif (!source) {\n\t\treturn destination;\n\t}\n\tforOwn(source, (key, value) => {\n\t\tdestination[key] = value;\n\t});\n\treturn destination;\n};\n\nconst forEach = (array, callback) => {\n\tconst length = array.length;\n\tlet index = -1;\n\twhile (++index < length) {\n\t\tcallback(array[index]);\n\t}\n};\n\nconst fourHexEscape = (hex) => {\n\treturn '\\\\u' + ('0000' + hex).slice(-4);\n}\n\nconst hexadecimal = (code, lowercase) => {\n\tlet hexadecimal = code.toString(16);\n\tif (lowercase) return hexadecimal;\n\treturn hexadecimal.toUpperCase();\n};\n\nconst toString = object.toString;\nconst isArray = Array.isArray;\nconst isBuffer = (value) => {\n\treturn typeof Buffer === 'function' && Buffer.isBuffer(value);\n};\nconst isObject = (value) => {\n\t// This is a very simple check, but it’s good enough for what we need.\n\treturn toString.call(value) == '[object Object]';\n};\nconst isString = (value) => {\n\treturn typeof value == 'string' ||\n\t\ttoString.call(value) == '[object String]';\n};\nconst isNumber = (value) => {\n\treturn typeof value == 'number' ||\n\t\ttoString.call(value) == '[object Number]';\n};\nconst isFunction = (value) => {\n\treturn typeof value == 'function';\n};\nconst isMap = (value) => {\n\treturn toString.call(value) == '[object Map]';\n};\nconst isSet = (value) => {\n\treturn toString.call(value) == '[object Set]';\n};\n\n/*--------------------------------------------------------------------------*/\n\n// https://mathiasbynens.be/notes/javascript-escapes#single\nconst singleEscapes = {\n\t'\\\\': '\\\\\\\\',\n\t'\\b': '\\\\b',\n\t'\\f': '\\\\f',\n\t'\\n': '\\\\n',\n\t'\\r': '\\\\r',\n\t'\\t': '\\\\t'\n\t// `\\v` is omitted intentionally, because in IE < 9, '\\v' == 'v'.\n\t// '\\v': '\\\\x0B'\n};\nconst regexSingleEscape = /[\\\\\\b\\f\\n\\r\\t]/;\n\nconst regexDigit = /[0-9]/;\nconst regexWhitespace = /[\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n\nconst escapeEverythingRegex = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])|([\\uD800-\\uDFFF])|(['\"`])|[^]/g;\nconst escapeNonAsciiRegex = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])|([\\uD800-\\uDFFF])|(['\"`])|[^ !#-&\\(-\\[\\]-_a-~]/g;\n\nconst jsesc = (argument, options) => {\n\tconst increaseIndentation = () => {\n\t\toldIndent = indent;\n\t\t++options.indentLevel;\n\t\tindent = options.indent.repeat(options.indentLevel)\n\t};\n\t// Handle options\n\tconst defaults = {\n\t\t'escapeEverything': false,\n\t\t'minimal': false,\n\t\t'isScriptContext': false,\n\t\t'quotes': 'single',\n\t\t'wrap': false,\n\t\t'es6': false,\n\t\t'json': false,\n\t\t'compact': true,\n\t\t'lowercaseHex': false,\n\t\t'numbers': 'decimal',\n\t\t'indent': '\\t',\n\t\t'indentLevel': 0,\n\t\t'__inline1__': false,\n\t\t'__inline2__': false\n\t};\n\tconst json = options && options.json;\n\tif (json) {\n\t\tdefaults.quotes = 'double';\n\t\tdefaults.wrap = true;\n\t}\n\toptions = extend(defaults, options);\n\tif (\n\t\toptions.quotes != 'single' &&\n\t\toptions.quotes != 'double' &&\n\t\toptions.quotes != 'backtick'\n\t) {\n\t\toptions.quotes = 'single';\n\t}\n\tconst quote = options.quotes == 'double' ?\n\t\t'\"' :\n\t\t(options.quotes == 'backtick' ?\n\t\t\t'`' :\n\t\t\t'\\''\n\t\t);\n\tconst compact = options.compact;\n\tconst lowercaseHex = options.lowercaseHex;\n\tlet indent = options.indent.repeat(options.indentLevel);\n\tlet oldIndent = '';\n\tconst inline1 = options.__inline1__;\n\tconst inline2 = options.__inline2__;\n\tconst newLine = compact ? '' : '\\n';\n\tlet result;\n\tlet isEmpty = true;\n\tconst useBinNumbers = options.numbers == 'binary';\n\tconst useOctNumbers = options.numbers == 'octal';\n\tconst useDecNumbers = options.numbers == 'decimal';\n\tconst useHexNumbers = options.numbers == 'hexadecimal';\n\n\tif (json && argument && isFunction(argument.toJSON)) {\n\t\targument = argument.toJSON();\n\t}\n\n\tif (!isString(argument)) {\n\t\tif (isMap(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Map()';\n\t\t\t}\n\t\t\tif (!compact) {\n\t\t\t\toptions.__inline1__ = true;\n\t\t\t\toptions.__inline2__ = false;\n\t\t\t}\n\t\t\treturn 'new Map(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isSet(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Set()';\n\t\t\t}\n\t\t\treturn 'new Set(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isBuffer(argument)) {\n\t\t\tif (argument.length == 0) {\n\t\t\t\treturn 'Buffer.from([])';\n\t\t\t}\n\t\t\treturn 'Buffer.from(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isArray(argument)) {\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tif (inline1) {\n\t\t\t\toptions.__inline1__ = false;\n\t\t\t\toptions.__inline2__ = true;\n\t\t\t}\n\t\t\tif (!inline2) {\n\t\t\t\tincreaseIndentation();\n\t\t\t}\n\t\t\tforEach(argument, (value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tif (inline2) {\n\t\t\t\t\toptions.__inline2__ = false;\n\t\t\t\t}\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact || inline2 ? '' : indent) +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '[]';\n\t\t\t}\n\t\t\tif (inline2) {\n\t\t\t\treturn '[' + result.join(', ') + ']';\n\t\t\t}\n\t\t\treturn '[' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + ']';\n\t\t} else if (isNumber(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// Some number values (e.g. `Infinity`) cannot be represented in JSON.\n\t\t\t\treturn JSON.stringify(argument);\n\t\t\t}\n\t\t\tif (useDecNumbers) {\n\t\t\t\treturn String(argument);\n\t\t\t}\n\t\t\tif (useHexNumbers) {\n\t\t\t\tlet hexadecimal = argument.toString(16);\n\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t\t}\n\t\t\t\treturn '0x' + hexadecimal;\n\t\t\t}\n\t\t\tif (useBinNumbers) {\n\t\t\t\treturn '0b' + argument.toString(2);\n\t\t\t}\n\t\t\tif (useOctNumbers) {\n\t\t\t\treturn '0o' + argument.toString(8);\n\t\t\t}\n\t\t} else if (!isObject(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// For some values (e.g. `undefined`, `function` objects),\n\t\t\t\t// `JSON.stringify(value)` returns `undefined` (which isn’t valid\n\t\t\t\t// JSON) instead of `'null'`.\n\t\t\t\treturn JSON.stringify(argument) || 'null';\n\t\t\t}\n\t\t\treturn String(argument);\n\t\t} else { // it’s an object\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tincreaseIndentation();\n\t\t\tforOwn(argument, (key, value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact ? '' : indent) +\n\t\t\t\t\tjsesc(key, options) + ':' +\n\t\t\t\t\t(compact ? '' : ' ') +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '{}';\n\t\t\t}\n\t\t\treturn '{' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + '}';\n\t\t}\n\t}\n\n\tconst regex = options.escapeEverything ? escapeEverythingRegex : escapeNonAsciiRegex;\n\tresult = argument.replace(regex, (char, pair, lone, quoteChar, index, string) => {\n\t\tif (pair) {\n\t\t\tif (options.minimal) return pair;\n\t\t\tconst first = pair.charCodeAt(0);\n\t\t\tconst second = pair.charCodeAt(1);\n\t\t\tif (options.es6) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tconst codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\tconst hex = hexadecimal(codePoint, lowercaseHex);\n\t\t\t\treturn '\\\\u{' + hex + '}';\n\t\t\t}\n\t\t\treturn fourHexEscape(hexadecimal(first, lowercaseHex)) + fourHexEscape(hexadecimal(second, lowercaseHex));\n\t\t}\n\n\t\tif (lone) {\n\t\t\treturn fourHexEscape(hexadecimal(lone.charCodeAt(0), lowercaseHex));\n\t\t}\n\n\t\tif (\n\t\t\tchar == '\\0' &&\n\t\t\t!json &&\n\t\t\t!regexDigit.test(string.charAt(index + 1))\n\t\t) {\n\t\t\treturn '\\\\0';\n\t\t}\n\n\t\tif (quoteChar) {\n\t\t\tif (quoteChar == quote || options.escapeEverything) {\n\t\t\t\treturn '\\\\' + quoteChar;\n\t\t\t}\n\t\t\treturn quoteChar;\n\t\t}\n\n\t\tif (regexSingleEscape.test(char)) {\n\t\t\t// no need for a `hasOwnProperty` check here\n\t\t\treturn singleEscapes[char];\n\t\t}\n\n\t\tif (options.minimal && !regexWhitespace.test(char)) {\n\t\t\treturn char;\n\t\t}\n\n\t\tconst hex = hexadecimal(char.charCodeAt(0), lowercaseHex);\n\t\tif (json || hex.length > 2) {\n\t\t\treturn fourHexEscape(hex);\n\t\t}\n\n\t\treturn '\\\\x' + ('00' + hex).slice(-2);\n\t});\n\n\tif (quote == '`') {\n\t\tresult = result.replace(/\\$\\{/g, '\\\\${');\n\t}\n\tif (options.isScriptContext) {\n\t\t// https://mathiasbynens.be/notes/etago\n\t\tresult = result\n\t\t\t.replace(/<\\/(script|style)/gi, '<\\\\/$1')\n\t\t\t.replace(/<!--/g, json ? '\\\\u003C!--' : '\\\\x3C!--');\n\t}\n\tif (options.wrap) {\n\t\tresult = quote + result + quote;\n\t}\n\treturn result;\n};\n\njsesc.version = '3.0.2';\n\nmodule.exports = jsesc;\n", "/* eslint-disable @eslint-react/dom/no-dangerously-set-innerhtml */\nimport type { RouterManagedTag } from '@tanstack/react-router'\n\nexport function Asset({ tag, attrs, children }: RouterManagedTag): any {\n  switch (tag) {\n    case 'title':\n      return (\n        <title {...attrs} suppressHydrationWarning>\n          {children}\n        </title>\n      )\n    case 'meta':\n      return <meta {...attrs} suppressHydrationWarning />\n    case 'link':\n      return <link {...attrs} suppressHydrationWarning />\n    case 'style':\n      return (\n        <style\n          {...attrs}\n          dangerouslySetInnerHTML={{ __html: children as any }}\n        />\n      )\n    case 'script':\n      if ((attrs as any) && (attrs as any).src) {\n        return <script {...attrs} suppressHydrationWarning />\n      }\n      if (typeof children === 'string')\n        return (\n          <script\n            {...attrs}\n            dangerouslySetInnerHTML={{\n              __html: children,\n            }}\n            suppressHydrationWarning\n          />\n        )\n      return null\n    default:\n      return null\n  }\n}\n", "import invariant from 'tiny-invariant'\n\nexport interface JsonResponse<TData> extends Response {\n  json: () => Promise<TData>\n}\n\nexport type FetcherOptionsBase = {\n  method?: 'GET' | 'POST'\n}\n\nexport type FetcherOptions = FetcherOptionsBase & {\n  requestInit?: RequestInit\n}\n\nexport type FetchFnCtx = {\n  method: 'GET' | 'POST'\n  request: Request\n}\n\nexport type FetchFn<TPayload, TResponse> = {\n  (payload: TPayload, ctx: FetchFnCtx): Promise<TResponse> | TResponse\n  url?: string\n}\n\nexport type CompiledFetcherFnOptions<TPayload> = {\n  method: 'GET' | 'POST'\n  payload: TPayload | undefined\n  requestInit?: RequestInit\n}\n\nexport type CompiledFetcherFn<TPayload, TResponse> = {\n  (opts: CompiledFetcherFnOptions<TPayload>): Promise<TResponse>\n  url: string\n}\n\ntype IsPayloadOptional<T> = [T] extends [undefined] ? true : false\n\nexport type Fetcher<TPayload, TResponse> =\n  (IsPayloadOptional<TPayload> extends true\n    ? (\n        payload?: TPayload,\n        opts?: FetcherOptions,\n      ) => Promise<FetcherPayload<TResponse>>\n    : (\n        payload: TPayload,\n        opts?: FetcherOptions,\n      ) => Promise<FetcherPayload<TResponse>>) & {\n    url: string\n  }\n\nexport type FetcherPayload<TResponse> = WrapRSCs<\n  TResponse extends JsonResponse<infer TData> ? TData : TResponse\n>\n\ntype WrapRSCs<T> = T extends JSX.Element\n  ? ReadableStream\n  : T extends Record<string, any>\n    ? {\n        [K in keyof T]: WrapRSCs<T[K]>\n      }\n    : T extends Array<infer U>\n      ? Array<WrapRSCs<U>>\n      : T\n\nexport type RscStream<T> = {\n  __cacheState: T\n}\n\nexport function createServerFn<\n  TMethod extends 'GET' | 'POST',\n  TPayload = undefined,\n  TResponse = unknown,\n>(\n  method: TMethod,\n  fn: FetchFn<TPayload, TResponse>,\n): Fetcher<TPayload, TResponse> {\n  // Cast the compiled function that will be injected by vinxi\n  const compiledFn = fn as unknown as CompiledFetcherFn<TPayload, TResponse>\n\n  invariant(\n    compiledFn.url,\n    `createServerFn must be called with a function that is marked with the 'use server' pragma. Are you using the @tanstack/router-plugin/vite ?`,\n  )\n\n  return Object.assign(\n    async (payload: TPayload, opts?: FetcherOptions) => {\n      return compiledFn({\n        method,\n        payload: payload || undefined,\n        requestInit: opts?.requestInit,\n      })\n    },\n    {\n      url: fn.url!,\n    },\n  ) as Fetcher<TPayload, TResponse>\n}\n", "export function DehydrateRouter() {\n  return null\n}\n", "import { serverFnReturnTypeHeader } from '../constants'\nimport type { JsonResponse } from './createServerFn'\n\nexport function json<TData>(\n  payload: TData,\n  opts?: {\n    status?: number\n    statusText?: string\n    headers?: HeadersInit\n  },\n): JsonResponse<TData> {\n  const status = opts?.status || 200\n  const statusText = opts?.statusText\n\n  return new Response(JSON.stringify(payload), {\n    status,\n    statusText,\n    headers: {\n      'Content-Type': 'application/json',\n      [serverFnReturnTypeHeader]: 'json',\n      ...opts?.headers,\n    },\n  })\n}\n", "import { createContext } from 'react'\n\nclass Context {\n  cache = new Map()\n\n  private static instance: Context | undefined\n\n  public static create(): Context {\n    if (!Context.instance) {\n      Context.instance = new Context()\n    }\n\n    return Context.instance\n  }\n\n  private createContext<T>(key: string, initialValue: T) {\n    const context = createContext(initialValue)\n\n    this.cache.set(key, context)\n\n    return context\n  }\n\n  get<T>(key: string, initialValue?: T) {\n    return this.cache.get(key) || this.createContext(key, initialValue)\n  }\n}\n\nconst context = Context.create()\n\nexport default context\n", "import { ScriptOnce, useRouter, useRouterState } from '@tanstack/react-router'\nimport * as React from 'react'\nimport { createPortal } from 'react-dom'\nimport jsesc from 'jsesc'\nimport { Context } from '@tanstack/react-cross-context'\nimport { Asset } from './Asset'\nimport type { RouterManagedTag } from '@tanstack/react-router'\n\nexport const useMeta = () => {\n  const router = useRouter()\n\n  const routeMeta = useRouterState({\n    select: (state) => {\n      return state.matches.map((match) => match.meta!).filter(Boolean)\n    },\n  })\n\n  const meta: Array<RouterManagedTag> = React.useMemo(() => {\n    const resultMeta: Array<RouterManagedTag> = []\n    const metaByName: Record<string, true> = {}\n    let title: RouterManagedTag | undefined\n    ;[...routeMeta].reverse().forEach((metas) => {\n      ;[...metas].reverse().forEach((m) => {\n        if (m.title) {\n          if (!title) {\n            title = {\n              tag: 'title',\n              children: m.title,\n            }\n          }\n        } else {\n          if (m.name) {\n            if (metaByName[m.name]) {\n              return\n            } else {\n              metaByName[m.name] = true\n            }\n          }\n\n          resultMeta.push({\n            tag: 'meta',\n            attrs: {\n              ...m,\n            },\n          })\n        }\n      })\n    })\n\n    if (title) {\n      resultMeta.push(title)\n    }\n\n    resultMeta.reverse()\n\n    return resultMeta\n  }, [routeMeta])\n\n  const links = useRouterState({\n    select: (state) =>\n      state.matches\n        .map((match) => match.links!)\n        .filter(Boolean)\n        .flat(1)\n        .map((link) => ({\n          tag: 'link',\n          attrs: {\n            ...link,\n          },\n        })) as Array<RouterManagedTag>,\n  })\n\n  const preloadMeta = useRouterState({\n    select: (state) => {\n      const preloadMeta: Array<RouterManagedTag> = []\n\n      state.matches\n        .map((match) => router.looseRoutesById[match.routeId]!)\n        .forEach((route) =>\n          router.manifest?.routes[route.id]?.preloads\n            ?.filter(Boolean)\n            .forEach((preload) => {\n              preloadMeta.push({\n                tag: 'link',\n                attrs: {\n                  rel: 'modulepreload',\n                  href: preload,\n                },\n              })\n            }),\n        )\n\n      return preloadMeta\n    },\n  })\n\n  return uniqBy(\n    [...meta, ...preloadMeta, ...links] as Array<RouterManagedTag>,\n    (d) => {\n      return JSON.stringify(d)\n    },\n  )\n}\n\nexport const useMetaElements = () => {\n  const router = useRouter()\n  const meta = useMeta()\n\n  const dehydratedCtx = React.useContext(\n    Context.get('TanStackRouterHydrationContext', {}),\n  )\n\n  return (\n    <>\n      <meta name=\"tsr-meta\" />\n      {meta.map((asset, i) => (\n        <Asset {...asset} key={`tsr-meta-${JSON.stringify(asset)}`} />\n      ))}\n      <>\n        <ScriptOnce\n          log={false}\n          children={`\n__TSR__ = {\n  matches: [],\n  streamedValues: {},\n  initMatch: (index) => {\n    Object.entries(__TSR__.matches[index].extracted).forEach(([id, ex]) => {\n      if (ex.type === 'stream') {\n        let controller;\n        ex.value = new ReadableStream({\n          start(c) { controller = c; }\n        })\n        ex.value.controller = controller\n      } else if (ex.type === 'promise') {\n        let r, j\n        ex.value = new Promise((r_, j_) => { r = r_, j = j_ })\n        ex.resolve = r; ex.reject = j\n      }\n    })\n  },\n  cleanScripts: () => {\n    document.querySelectorAll('.tsr-once').forEach((el) => {\n      el.remove()\n    })\n  },\n}`}\n        />\n        <ScriptOnce\n          children={`__TSR__.dehydrated = ${jsesc(\n            router.options.transformer.stringify(dehydratedCtx),\n            {\n              isScriptContext: true,\n              wrap: true,\n              json: true,\n            },\n          )}`}\n        />\n      </>\n      <meta name=\"/tsr-meta\" />\n    </>\n  )\n}\n\n/**\n * @description The `Meta` component is used to render meta tags and links for the current route.\n * It should be rendered in the `<head>` of your document.\n */\nexport const Meta = ({ children }: { children?: React.ReactNode }) => {\n  const router = useRouter()\n  const metaElements = useMetaElements()\n  const [mounted, setMounted] = React.useState(false)\n\n  React[\n    typeof document !== 'undefined' ? 'useLayoutEffect' : 'useEffect'\n  ](() => {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    // Remove all meta between the tsr meta tags\n    const start = document.head.querySelector('meta[name=\"tsr-meta\"]')\n    const end = document.head.querySelector('meta[name=\"/tsr-meta\"]')\n\n    // Iterate over all head children and remove them until we reach the end\n    let current = start?.nextElementSibling\n    while (current && current !== end) {\n      const next = current.nextElementSibling\n      current.remove()\n      current = next\n    }\n\n    // Remove the markers\n    start?.remove()\n    end?.remove()\n\n    setMounted(true)\n  }, [])\n\n  const all = (\n    <>\n      {metaElements}\n      {children}\n    </>\n  )\n\n  if (router.isServer) {\n    return all\n  }\n\n  if (!mounted) {\n    return null\n  }\n\n  return createPortal(all, document.head)\n}\n\nexport function Html({ children, ...props }: React.HTMLProps<HTMLHtmlElement>) {\n  const router = useRouter()\n\n  // warning(\n  //   !Object.keys(props).length,\n  //   'Passing props other than children to the Html component will be supported very soon in React 19.',\n  // )\n\n  if (!router.isServer) {\n    return <>{children}</>\n  }\n\n  return <html>{children}</html>\n}\n\nexport function Head({ children, ...props }: React.HTMLProps<HTMLHeadElement>) {\n  const router = useRouter()\n\n  // warning(\n  //   !Object.keys(props).length,\n  //   'Passing props other than children to the Head component will be supported very soon in React 19.',\n  // )\n\n  if (!router.isServer) {\n    return children\n  }\n\n  return <head>{children}</head>\n}\n\nexport function Body({ children, ...props }: React.HTMLProps<HTMLBodyElement>) {\n  const router = useRouter()\n\n  // warning(\n  //   !Object.keys(props).length,\n  //   'Passing props other than children to the Body component will be supported very soon in React 19.',\n  // )\n\n  if (!router.isServer) {\n    return children\n  }\n\n  return (\n    <body>\n      <div id=\"root\">{children}</div>\n    </body>\n  )\n}\n\nfunction uniqBy<T>(arr: Array<T>, fn: (item: T) => string) {\n  const seen = new Set<string>()\n  return arr.filter((item) => {\n    const key = fn(item)\n    if (seen.has(key)) {\n      return false\n    }\n    seen.add(key)\n    return true\n  })\n}\n", "import { useRouter, useRouterState } from '@tanstack/react-router'\nimport { Asset } from './Asset'\nimport type { RouterManagedTag } from '@tanstack/react-router'\n\nexport const Scripts = () => {\n  const router = useRouter()\n\n  const assetScripts = useRouterState({\n    select: (state) => {\n      const assetScripts: Array<RouterManagedTag> = []\n\n      state.matches\n        .map((match) => router.looseRoutesById[match.routeId]!)\n        .forEach((route) =>\n          router.manifest?.routes[route.id]?.assets\n            ?.filter((d) => d.tag === 'script')\n            .forEach((asset) => {\n              assetScripts.push({\n                tag: 'script',\n                attrs: asset.attrs,\n                children: asset.children,\n              } as any)\n            }),\n        )\n\n      return assetScripts\n    },\n  })\n\n  const { scripts } = useRouterState({\n    select: (state) => ({\n      scripts: state.matches\n        .map((match) => match.scripts!)\n        .filter(Boolean)\n        .flat(1)\n        .map(({ children, ...script }) => ({\n          tag: 'script',\n          attrs: {\n            ...script,\n            suppressHydrationWarning: true,\n          },\n          children,\n        })),\n    }),\n  })\n\n  const allScripts = [...scripts, ...assetScripts] as Array<RouterManagedTag>\n\n  return (\n    <>\n      {allScripts.map((asset, i) => (\n        // eslint-disable-next-line @eslint-react/no-array-index-key\n        <Asset {...asset} key={`tsr-scripts-${asset.tag}-${i}`} />\n      ))}\n    </>\n  )\n}\n", "import * as React from 'react'\nimport {\n  ScriptOnce,\n  createControlledPromise,\n  defer,\n  isPlainArray,\n  isPlainObject,\n  pick,\n  useRouter,\n} from '@tanstack/react-router'\nimport jsesc from 'jsesc'\nimport invariant from 'tiny-invariant'\nimport type {\n  AnyRouteMatch,\n  AnyRouter,\n  ExtractedEntry,\n  StreamState,\n} from '@tanstack/react-router'\n\nexport function serializeLoaderData(\n  dataType: '__beforeLoadContext' | 'loaderData',\n  data: any,\n  ctx: {\n    match: AnyRouteMatch\n    router: AnyRouter\n  },\n) {\n  if (!ctx.router.isServer) {\n    return data\n  }\n\n  ;(ctx.match as any).extracted = (ctx.match as any).extracted || []\n\n  const extracted = (ctx.match as any).extracted\n\n  const replacedLoaderData = replaceBy(data, (value, path) => {\n    const type =\n      value instanceof ReadableStream\n        ? 'stream'\n        : value instanceof Promise\n          ? 'promise'\n          : undefined\n\n    if (type) {\n      const entry: ExtractedEntry = {\n        dataType,\n        type,\n        path,\n        id: extracted.length,\n        value,\n        matchIndex: ctx.match.index,\n      }\n\n      extracted.push(entry)\n\n      // If it's a stream, we need to tee it so we can read it multiple times\n      if (type === 'stream') {\n        const [copy1, copy2] = value.tee()\n        entry.streamState = createStreamState({ stream: copy2 })\n\n        return copy1\n      } else {\n        defer(value)\n      }\n    }\n\n    return value\n  })\n\n  return replacedLoaderData\n}\n\n// Right after hydration and before the first render, we need to rehydrate each match\n// This includes rehydrating the loaderData and also using the beforeLoadContext\n// to reconstruct any context that was serialized on the server\nexport function afterHydrate({ router }: { router: AnyRouter }) {\n  router.state.matches.forEach((match) => {\n    const route = router.looseRoutesById[match.routeId]!\n    const dMatch = window.__TSR__?.matches[match.index]\n    if (dMatch) {\n      const parentMatch = router.state.matches[match.index - 1]\n      const parentContext = parentMatch?.context ?? router.options.context ?? {}\n      if (dMatch.__beforeLoadContext) {\n        match.__beforeLoadContext = router.options.transformer.parse(\n          dMatch.__beforeLoadContext,\n        ) as any\n\n        match.context = {\n          ...parentContext,\n          ...match.context,\n          ...match.__beforeLoadContext,\n        }\n      }\n\n      if (dMatch.loaderData) {\n        match.loaderData = router.options.transformer.parse(dMatch.loaderData)\n      }\n\n      const extracted = dMatch.extracted\n\n      if (extracted) {\n        Object.entries(extracted).forEach(([_, ex]: any) => {\n          if (ex.value instanceof Promise) {\n            const og = ex.value\n            ex.value = og.then((data: any) => {\n              return data\n            })\n          }\n          deepMutableSetByPath(match, ['loaderData', ...ex.path], ex.value)\n        })\n      }\n    }\n\n    const meta =\n      match.status === 'success'\n        ? route.options.meta?.({\n            matches: router.state.matches,\n            match,\n            params: match.params,\n            loaderData: match.loaderData,\n          })\n        : undefined\n\n    Object.assign(match, {\n      meta,\n      links: route.options.links?.(),\n      scripts: route.options.scripts?.(),\n    })\n  })\n}\n\nexport function AfterEachMatch(props: { match: any; matchIndex: number }) {\n  const router = useRouter()\n\n  const fullMatch = router.state.matches[props.matchIndex]!\n\n  if (!router.isServer) {\n    return null\n  }\n\n  const extracted = (fullMatch as any).extracted as\n    | undefined\n    | Array<ExtractedEntry>\n\n  const [serializedBeforeLoadData, serializedLoaderData] = (\n    ['__beforeLoadContext', 'loaderData'] as const\n  ).map((dataType) => {\n    return extracted\n      ? extracted.reduce(\n          (acc: any, entry: ExtractedEntry) => {\n            if (entry.dataType !== dataType) {\n              return deepImmutableSetByPath(\n                acc,\n                ['temp', ...entry.path],\n                undefined,\n              )\n            }\n            return acc\n          },\n          { temp: fullMatch[dataType] },\n        ).temp\n      : fullMatch[dataType]\n  })\n\n  return (\n    <>\n      {serializedBeforeLoadData !== undefined ||\n      serializedLoaderData !== undefined ||\n      extracted?.length ? (\n        <ScriptOnce\n          children={`__TSR__.matches[${props.matchIndex}] = ${jsesc(\n            {\n              __beforeLoadContext: router.options.transformer.stringify(\n                serializedBeforeLoadData,\n              ),\n              loaderData:\n                router.options.transformer.stringify(serializedLoaderData),\n              extracted: extracted\n                ? Object.fromEntries(\n                    extracted.map((entry) => {\n                      return [entry.id, pick(entry, ['type', 'path'])]\n                    }),\n                  )\n                : {},\n            },\n            {\n              isScriptContext: true,\n              wrap: true,\n              json: true,\n            },\n          )}; __TSR__.initMatch(${props.matchIndex})`}\n        />\n      ) : null}\n      {extracted\n        ? extracted.map((d, i) => {\n            if (d.type === 'stream') {\n              return <DehydrateStream key={d.id} entry={d} />\n            }\n\n            return <DehydratePromise key={d.id} entry={d} />\n          })\n        : null}\n    </>\n  )\n}\n\nexport function replaceBy<T>(\n  obj: T,\n  cb: (value: any, path: Array<string>) => any,\n  path: Array<string> = [],\n): T {\n  if (isPlainArray(obj)) {\n    return obj.map((value, i) => replaceBy(value, cb, [...path, `${i}`])) as any\n  }\n\n  if (isPlainObject(obj)) {\n    // Do not allow objects with illegal\n    const newObj: any = {}\n\n    for (const key in obj) {\n      newObj[key] = replaceBy(obj[key], cb, [...path, key])\n    }\n\n    return newObj\n  }\n\n  // // Detect classes, functions, and other non-serializable objects\n  // // and return undefined. Exclude some known types that are serializable\n  // if (\n  //   typeof obj === 'function' ||\n  //   (typeof obj === 'object' &&\n  //     ![Object, Promise, ReadableStream].includes((obj as any)?.constructor))\n  // ) {\n  //   console.info(obj)\n  //   warning(false, `Non-serializable value ☝️ found at ${path.join('.')}`)\n  //   return undefined as any\n  // }\n\n  const newObj = cb(obj, path)\n\n  if (newObj !== obj) {\n    return newObj\n  }\n\n  return obj\n}\n\nfunction DehydratePromise({ entry }: { entry: ExtractedEntry }) {\n  return (\n    <div className=\"tsr-once\">\n      <React.Suspense fallback={null}>\n        <InnerDehydratePromise entry={entry} />\n      </React.Suspense>\n    </div>\n  )\n}\n\nfunction InnerDehydratePromise({ entry }: { entry: ExtractedEntry }) {\n  if (entry.value.status === 'pending') {\n    throw entry.value\n  }\n\n  return (\n    <ScriptOnce\n      children={`__TSR__.matches[${entry.matchIndex}].extracted[${entry.id}].resolve(${jsesc(\n        entry.value.data,\n        {\n          isScriptContext: true,\n          wrap: true,\n          json: true,\n        },\n      )})`}\n    />\n  )\n}\n\nfunction DehydrateStream({ entry }: { entry: ExtractedEntry }) {\n  invariant(entry.streamState, 'StreamState should be defined')\n\n  return (\n    <StreamChunks\n      streamState={entry.streamState}\n      children={(chunk) => (\n        <ScriptOnce\n          children={\n            chunk\n              ? `__TSR__.matches[${entry.matchIndex}].extracted[${entry.id}].value.controller.enqueue(new TextEncoder().encode(${jsesc(\n                  chunk.toString(),\n                  {\n                    isScriptContext: true,\n                    wrap: true,\n                    json: true,\n                  },\n                )}))`\n              : `__TSR__.matches[${entry.matchIndex}].extracted[${entry.id}].value.controller.close()`\n          }\n        />\n      )}\n    />\n  )\n}\n\n// Readable stream with state is a stream that has a promise that resolves to the next chunk\nfunction createStreamState({\n  stream,\n}: {\n  stream: ReadableStream\n}): StreamState {\n  const streamState: StreamState = {\n    promises: [],\n  }\n\n  const reader = stream.getReader()\n\n  const read = (index: number): any => {\n    streamState.promises[index] = createControlledPromise()\n\n    return reader.read().then(({ done, value }) => {\n      if (done) {\n        streamState.promises[index]!.resolve(null)\n        reader.releaseLock()\n        return\n      }\n\n      streamState.promises[index]!.resolve(value)\n\n      return read(index + 1)\n    })\n  }\n\n  read(0).catch((err: any) => {\n    console.error('stream read error', err)\n  })\n\n  return streamState\n}\n\nfunction StreamChunks({\n  streamState,\n  children,\n  __index = 0,\n}: {\n  streamState: StreamState\n  children: (chunk: string | null) => JSX.Element\n  __index?: number\n}) {\n  const promise = streamState.promises[__index]\n\n  if (!promise) {\n    return null\n  }\n\n  if (promise.status === 'pending') {\n    throw promise\n  }\n\n  const chunk = promise.value!\n\n  return (\n    <>\n      {children(chunk)}\n      <div className=\"tsr-once\">\n        <React.Suspense fallback={null}>\n          <StreamChunks\n            streamState={streamState}\n            __index={__index + 1}\n            children={children}\n          />\n        </React.Suspense>\n      </div>\n    </>\n  )\n}\n\nfunction deepImmutableSetByPath<T>(obj: T, path: Array<string>, value: any): T {\n  // immutable set by path retaining array and object references\n  if (path.length === 0) {\n    return value\n  }\n\n  const [key, ...rest] = path\n\n  if (Array.isArray(obj)) {\n    return obj.map((item, i) => {\n      if (i === Number(key)) {\n        return deepImmutableSetByPath(item, rest, value)\n      }\n      return item\n    }) as T\n  }\n\n  if (isPlainObject(obj)) {\n    return {\n      ...obj,\n      [key!]: deepImmutableSetByPath((obj as any)[key!], rest, value),\n    }\n  }\n\n  return obj\n}\n\nfunction deepMutableSetByPath<T>(obj: T, path: Array<string>, value: any) {\n  // mutable set by path retaining array and object references\n  if (path.length === 1) {\n    ;(obj as any)[path[0]!] = value\n  }\n\n  const [key, ...rest] = path\n\n  if (Array.isArray(obj)) {\n    deepMutableSetByPath(obj[Number(key)], rest, value)\n  } else if (isPlainObject(obj)) {\n    deepMutableSetByPath((obj as any)[key!], rest, value)\n  }\n}\n", "import { RouterProvider } from '@tanstack/react-router'\nimport { afterHydrate } from './serialization'\nimport type { AnyRouter } from '@tanstack/react-router'\n\nlet cleaned = false\n\nexport function StartClient(props: { router: AnyRouter }) {\n  if (!props.router.state.matches.length) {\n    props.router.hydrate()\n    afterHydrate({ router: props.router })\n  }\n\n  if (!cleaned) {\n    cleaned = true\n    window.__TSR__?.cleanScripts()\n  }\n\n  return <RouterProvider router={props.router} />\n}\n", "import type { OutgoingHttpHeaders } from 'node:http2'\n\n// A utility function to turn HeadersInit into an object\nexport function headersInitToObject(\n  headers: HeadersInit,\n): Record<keyof OutgoingHttpHeaders, string> {\n  const obj: Record<keyof OutgoingHttpHeaders, string> = {}\n  const headersInstance = new Headers(headers)\n  for (const [key, value] of headersInstance.entries()) {\n    obj[key] = value\n  }\n  return obj\n}\n\ntype AnyHeaders =\n  | Headers\n  | HeadersInit\n  | Record<string, string>\n  | Array<[string, string]>\n  | OutgoingHttpHeaders\n  | undefined\n\n// Helper function to convert various HeaderInit types to a Headers instance\nfunction toHeadersInstance(init: AnyHeaders) {\n  if (init instanceof Headers) {\n    return new Headers(init)\n  } else if (Array.isArray(init)) {\n    return new Headers(init)\n  } else if (typeof init === 'object') {\n    return new Headers(init as HeadersInit)\n  } else {\n    return new Headers()\n  }\n}\n\n// Function to merge headers with proper overrides\nexport function mergeHeaders(...headers: Array<AnyHeaders>) {\n  return headers.reduce((acc: Headers, header) => {\n    const headersInstance = toHeadersInstance(header)\n    for (const [key, value] of headersInstance.entries()) {\n      acc.set(key, value)\n    }\n    return acc\n  }, new Headers())\n}\n", "// TODO: RSCs\n// // @ts-expect-error\n// import * as reactDom from '@vinxi/react-server-dom/client'\nimport { isValidElement } from 'react'\nimport invariant from 'tiny-invariant'\n\nexport function renderRsc(input: any): JSX.Element {\n  if (isValidElement(input)) {\n    return input\n  }\n\n  if (typeof input === 'object' && !input.state) {\n    input.state = {\n      status: 'pending',\n      promise: Promise.resolve()\n        .then(() => {\n          let element\n\n          // We're in node\n          // TODO: RSCs\n          // if (reactDom.createFromNodeStream) {\n          //   const stream = await import('node:stream')\n\n          //   let body: any = input\n\n          //   // Unwrap the response\n          //   if (input instanceof Response) {\n          //     body = input.body\n          //   }\n\n          //   // Convert ReadableStream to NodeJS stream.Readable\n          //   if (body instanceof ReadableStream) {\n          //     body = stream.Readable.fromWeb(body as any)\n          //   }\n\n          //   if (stream.Readable.isReadable(body)) {\n          //     // body = copyStreamToRaw(body)\n          //   } else if (input.text) {\n          //     // create a readable stream by awaiting the text method\n          //     body = new stream.Readable({\n          //       async read() {\n          //         input.text().then((value: any) => {\n          //           this.push(value)\n          //           this.push(null)\n          //         })\n          //       },\n          //     })\n          //   } else {\n          //     console.error('input', input)\n          //     throw new Error('Unexpected rsc input type 👆')\n          //   }\n\n          //   element = await reactDom.createFromNodeStream(body)\n          // } else {\n          //   // We're in the browser\n          //   if (input.body instanceof ReadableStream) {\n          //     input = input.body\n          //   }\n\n          //   if (input instanceof ReadableStream) {\n          //     element = await reactDom.createFromReadableStream(input)\n          //   }\n\n          //   if (input instanceof Response) {\n          //     // copy to the response body to cache the raw data\n          //     element = await reactDom.createFromFetch(input)\n          //   }\n          // }\n\n          // return element\n\n          invariant(false, 'renderRSC() is coming soon!')\n        })\n        .then((element) => {\n          input.state.value = element\n          input.state.status = 'success'\n        })\n        .catch((err) => {\n          input.state.status = 'error'\n          input.state.error = err\n        }),\n    }\n  }\n\n  if (input.state.status === 'pending') {\n    throw input.state.promise\n  }\n\n  return input.state.value\n}\n", "import { isRedirect, useRouter } from '@tanstack/react-router'\n\nexport function useServerFn<T extends (...deps: Array<any>) => Promise<any>>(\n  serverFn: T,\n): (...args: Parameters<T>) => ReturnType<T> {\n  const router = useRouter()\n\n  return (async (...args: Array<any>) => {\n    try {\n      const res = await serverFn(...args)\n\n      if (isRedirect(res)) {\n        throw res\n      }\n\n      return res\n    } catch (err) {\n      if (isRedirect(err)) {\n        router.navigate(\n          router.resolveRedirect({\n            ...err,\n            _fromLocation: router.state.location,\n          }),\n        )\n      }\n\n      throw err\n    }\n  }) as any\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAEA,QAAM,SAAS,CAAC;AAChB,QAAM,iBAAiB,OAAO;AAC9B,QAAM,SAAS,CAACA,SAAQ,aAAa;AACpC,iBAAW,OAAOA,SAAQ;AACzB,YAAI,eAAe,KAAKA,SAAQ,GAAG,GAAG;AACrC,mBAAS,KAAKA,QAAO,GAAG,CAAC;AAAA,QAC1B;AAAA,MACD;AAAA,IACD;AAEA,QAAM,SAAS,CAAC,aAAa,WAAW;AACvC,UAAI,CAAC,QAAQ;AACZ,eAAO;AAAA,MACR;AACA,aAAO,QAAQ,CAAC,KAAK,UAAU;AAC9B,oBAAY,GAAG,IAAI;AAAA,MACpB,CAAC;AACD,aAAO;AAAA,IACR;AAEA,QAAM,UAAU,CAAC,OAAO,aAAa;AACpC,YAAM,SAAS,MAAM;AACrB,UAAI,QAAQ;AACZ,aAAO,EAAE,QAAQ,QAAQ;AACxB,iBAAS,MAAM,KAAK,CAAC;AAAA,MACtB;AAAA,IACD;AAEA,QAAM,gBAAgB,CAAC,QAAQ;AAC9B,aAAO,SAAS,SAAS,KAAK,MAAM,EAAE;AAAA,IACvC;AAEA,QAAM,cAAc,CAAC,MAAM,cAAc;AACxC,UAAIC,eAAc,KAAK,SAAS,EAAE;AAClC,UAAI,UAAW,QAAOA;AACtB,aAAOA,aAAY,YAAY;AAAA,IAChC;AAEA,QAAM,WAAW,OAAO;AACxB,QAAM,UAAU,MAAM;AACtB,QAAM,WAAW,CAAC,UAAU;AAC3B,aAAO,OAAO,WAAW,cAAc,OAAO,SAAS,KAAK;AAAA,IAC7D;AACA,QAAM,WAAW,CAAC,UAAU;AAE3B,aAAO,SAAS,KAAK,KAAK,KAAK;AAAA,IAChC;AACA,QAAM,WAAW,CAAC,UAAU;AAC3B,aAAO,OAAO,SAAS,YACtB,SAAS,KAAK,KAAK,KAAK;AAAA,IAC1B;AACA,QAAM,WAAW,CAAC,UAAU;AAC3B,aAAO,OAAO,SAAS,YACtB,SAAS,KAAK,KAAK,KAAK;AAAA,IAC1B;AACA,QAAM,aAAa,CAAC,UAAU;AAC7B,aAAO,OAAO,SAAS;AAAA,IACxB;AACA,QAAM,QAAQ,CAAC,UAAU;AACxB,aAAO,SAAS,KAAK,KAAK,KAAK;AAAA,IAChC;AACA,QAAM,QAAQ,CAAC,UAAU;AACxB,aAAO,SAAS,KAAK,KAAK,KAAK;AAAA,IAChC;AAKA,QAAM,gBAAgB;AAAA,MACrB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,KAAM;AAAA;AAAA;AAAA,IAGP;AACA,QAAM,oBAAoB;AAE1B,QAAM,aAAa;AACnB,QAAM,kBAAkB;AAExB,QAAM,wBAAwB;AAC9B,QAAM,sBAAsB;AAE5B,QAAMC,SAAQ,CAAC,UAAU,YAAY;AACpC,YAAM,sBAAsB,MAAM;AACjC,oBAAY;AACZ,UAAE,QAAQ;AACV,iBAAS,QAAQ,OAAO,OAAO,QAAQ,WAAW;AAAA,MACnD;AAEA,YAAM,WAAW;AAAA,QAChB,oBAAoB;AAAA,QACpB,WAAW;AAAA,QACX,mBAAmB;AAAA,QACnB,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,gBAAgB;AAAA,QAChB,WAAW;AAAA,QACX,UAAU;AAAA,QACV,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,MAChB;AACA,YAAMC,QAAO,WAAW,QAAQ;AAChC,UAAIA,OAAM;AACT,iBAAS,SAAS;AAClB,iBAAS,OAAO;AAAA,MACjB;AACA,gBAAU,OAAO,UAAU,OAAO;AAClC,UACC,QAAQ,UAAU,YAClB,QAAQ,UAAU,YAClB,QAAQ,UAAU,YACjB;AACD,gBAAQ,SAAS;AAAA,MAClB;AACA,YAAM,QAAQ,QAAQ,UAAU,WAC/B,MACC,QAAQ,UAAU,aAClB,MACA;AAEF,YAAM,UAAU,QAAQ;AACxB,YAAM,eAAe,QAAQ;AAC7B,UAAI,SAAS,QAAQ,OAAO,OAAO,QAAQ,WAAW;AACtD,UAAI,YAAY;AAChB,YAAM,UAAU,QAAQ;AACxB,YAAM,UAAU,QAAQ;AACxB,YAAM,UAAU,UAAU,KAAK;AAC/B,UAAI;AACJ,UAAI,UAAU;AACd,YAAM,gBAAgB,QAAQ,WAAW;AACzC,YAAM,gBAAgB,QAAQ,WAAW;AACzC,YAAM,gBAAgB,QAAQ,WAAW;AACzC,YAAM,gBAAgB,QAAQ,WAAW;AAEzC,UAAIA,SAAQ,YAAY,WAAW,SAAS,MAAM,GAAG;AACpD,mBAAW,SAAS,OAAO;AAAA,MAC5B;AAEA,UAAI,CAAC,SAAS,QAAQ,GAAG;AACxB,YAAI,MAAM,QAAQ,GAAG;AACpB,cAAI,SAAS,QAAQ,GAAG;AACvB,mBAAO;AAAA,UACR;AACA,cAAI,CAAC,SAAS;AACb,oBAAQ,cAAc;AACtB,oBAAQ,cAAc;AAAA,UACvB;AACA,iBAAO,aAAaD,OAAM,MAAM,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,QAC5D;AACA,YAAI,MAAM,QAAQ,GAAG;AACpB,cAAI,SAAS,QAAQ,GAAG;AACvB,mBAAO;AAAA,UACR;AACA,iBAAO,aAAaA,OAAM,MAAM,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,QAC5D;AACA,YAAI,SAAS,QAAQ,GAAG;AACvB,cAAI,SAAS,UAAU,GAAG;AACzB,mBAAO;AAAA,UACR;AACA,iBAAO,iBAAiBA,OAAM,MAAM,KAAK,QAAQ,GAAG,OAAO,IAAI;AAAA,QAChE;AACA,YAAI,QAAQ,QAAQ,GAAG;AACtB,mBAAS,CAAC;AACV,kBAAQ,OAAO;AACf,cAAI,SAAS;AACZ,oBAAQ,cAAc;AACtB,oBAAQ,cAAc;AAAA,UACvB;AACA,cAAI,CAAC,SAAS;AACb,gCAAoB;AAAA,UACrB;AACA,kBAAQ,UAAU,CAAC,UAAU;AAC5B,sBAAU;AACV,gBAAI,SAAS;AACZ,sBAAQ,cAAc;AAAA,YACvB;AACA,mBAAO;AAAA,eACL,WAAW,UAAU,KAAK,UAC3BA,OAAM,OAAO,OAAO;AAAA,YACrB;AAAA,UACD,CAAC;AACD,cAAI,SAAS;AACZ,mBAAO;AAAA,UACR;AACA,cAAI,SAAS;AACZ,mBAAO,MAAM,OAAO,KAAK,IAAI,IAAI;AAAA,UAClC;AACA,iBAAO,MAAM,UAAU,OAAO,KAAK,MAAM,OAAO,IAAI,WAClD,UAAU,KAAK,aAAa;AAAA,QAC/B,WAAW,SAAS,QAAQ,GAAG;AAC9B,cAAIC,OAAM;AAET,mBAAO,KAAK,UAAU,QAAQ;AAAA,UAC/B;AACA,cAAI,eAAe;AAClB,mBAAO,OAAO,QAAQ;AAAA,UACvB;AACA,cAAI,eAAe;AAClB,gBAAIF,eAAc,SAAS,SAAS,EAAE;AACtC,gBAAI,CAAC,cAAc;AAClB,cAAAA,eAAcA,aAAY,YAAY;AAAA,YACvC;AACA,mBAAO,OAAOA;AAAA,UACf;AACA,cAAI,eAAe;AAClB,mBAAO,OAAO,SAAS,SAAS,CAAC;AAAA,UAClC;AACA,cAAI,eAAe;AAClB,mBAAO,OAAO,SAAS,SAAS,CAAC;AAAA,UAClC;AAAA,QACD,WAAW,CAAC,SAAS,QAAQ,GAAG;AAC/B,cAAIE,OAAM;AAIT,mBAAO,KAAK,UAAU,QAAQ,KAAK;AAAA,UACpC;AACA,iBAAO,OAAO,QAAQ;AAAA,QACvB,OAAO;AACN,mBAAS,CAAC;AACV,kBAAQ,OAAO;AACf,8BAAoB;AACpB,iBAAO,UAAU,CAAC,KAAK,UAAU;AAChC,sBAAU;AACV,mBAAO;AAAA,eACL,UAAU,KAAK,UAChBD,OAAM,KAAK,OAAO,IAAI,OACrB,UAAU,KAAK,OAChBA,OAAM,OAAO,OAAO;AAAA,YACrB;AAAA,UACD,CAAC;AACD,cAAI,SAAS;AACZ,mBAAO;AAAA,UACR;AACA,iBAAO,MAAM,UAAU,OAAO,KAAK,MAAM,OAAO,IAAI,WAClD,UAAU,KAAK,aAAa;AAAA,QAC/B;AAAA,MACD;AAEA,YAAM,QAAQ,QAAQ,mBAAmB,wBAAwB;AACjE,eAAS,SAAS,QAAQ,OAAO,CAAC,MAAM,MAAM,MAAM,WAAW,OAAO,WAAW;AAChF,YAAI,MAAM;AACT,cAAI,QAAQ,QAAS,QAAO;AAC5B,gBAAM,QAAQ,KAAK,WAAW,CAAC;AAC/B,gBAAM,SAAS,KAAK,WAAW,CAAC;AAChC,cAAI,QAAQ,KAAK;AAEhB,kBAAM,aAAa,QAAQ,SAAU,OAAQ,SAAS,QAAS;AAC/D,kBAAME,OAAM,YAAY,WAAW,YAAY;AAC/C,mBAAO,SAASA,OAAM;AAAA,UACvB;AACA,iBAAO,cAAc,YAAY,OAAO,YAAY,CAAC,IAAI,cAAc,YAAY,QAAQ,YAAY,CAAC;AAAA,QACzG;AAEA,YAAI,MAAM;AACT,iBAAO,cAAc,YAAY,KAAK,WAAW,CAAC,GAAG,YAAY,CAAC;AAAA,QACnE;AAEA,YACC,QAAQ,QACR,CAACD,SACD,CAAC,WAAW,KAAK,OAAO,OAAO,QAAQ,CAAC,CAAC,GACxC;AACD,iBAAO;AAAA,QACR;AAEA,YAAI,WAAW;AACd,cAAI,aAAa,SAAS,QAAQ,kBAAkB;AACnD,mBAAO,OAAO;AAAA,UACf;AACA,iBAAO;AAAA,QACR;AAEA,YAAI,kBAAkB,KAAK,IAAI,GAAG;AAEjC,iBAAO,cAAc,IAAI;AAAA,QAC1B;AAEA,YAAI,QAAQ,WAAW,CAAC,gBAAgB,KAAK,IAAI,GAAG;AACnD,iBAAO;AAAA,QACR;AAEA,cAAM,MAAM,YAAY,KAAK,WAAW,CAAC,GAAG,YAAY;AACxD,YAAIA,SAAQ,IAAI,SAAS,GAAG;AAC3B,iBAAO,cAAc,GAAG;AAAA,QACzB;AAEA,eAAO,SAAS,OAAO,KAAK,MAAM,EAAE;AAAA,MACrC,CAAC;AAED,UAAI,SAAS,KAAK;AACjB,iBAAS,OAAO,QAAQ,SAAS,MAAM;AAAA,MACxC;AACA,UAAI,QAAQ,iBAAiB;AAE5B,iBAAS,OACP,QAAQ,uBAAuB,QAAQ,EACvC,QAAQ,SAASA,QAAO,eAAe,UAAU;AAAA,MACpD;AACA,UAAI,QAAQ,MAAM;AACjB,iBAAS,QAAQ,SAAS;AAAA,MAC3B;AACA,aAAO;AAAA,IACR;AAEA,IAAAD,OAAM,UAAU;AAEhB,WAAO,UAAUA;AAAA;AAAA;;;;AC1TV,SAAS,MAAM,EAAE,KAAK,OAAO,SAAA,GAAmC;AACrE,UAAQ,KAAK;IACX,KAAK;AACH,iBAAA,wBACG,SAAO,EAAA,GAAG,OAAO,0BAAwB,MACvC,SACH,CAAA;IAEJ,KAAK;AACH,iBAAQ,wBAAA,QAAA,EAAM,GAAG,OAAO,0BAAwB,KAAC,CAAA;IACnD,KAAK;AACH,iBAAQ,wBAAA,QAAA,EAAM,GAAG,OAAO,0BAAwB,KAAC,CAAA;IACnD,KAAK;AAED,iBAAA;QAAC;QAAA;UACE,GAAG;UACJ,yBAAyB,EAAE,QAAQ,SAAgB;QAAA;MAAA;IAGzD,KAAK;AACE,UAAA,SAAkB,MAAc,KAAK;AACxC,mBAAQ,wBAAA,UAAA,EAAQ,GAAG,OAAO,0BAAwB,KAAC,CAAA;MACrD;AACA,UAAI,OAAO,aAAa;AAEpB,mBAAA;UAAC;UAAA;YACE,GAAG;YACJ,yBAAyB;cACvB,QAAQ;YACV;YACA,0BAAwB;UAAA;QAAA;AAGvB,aAAA;IACT;AACS,aAAA;EACX;AACF;;;AC4BgB,SAAA,eAKd,QACA,IAC8B;AAE9B,QAAM,aAAa;AAEnB;IACE,WAAW;IACX;EAAA;AAGF,SAAO,OAAO;IACZ,OAAO,SAAmB,SAA0B;AAClD,aAAO,WAAW;QAChB;QACA,SAAS,WAAW;QACpB,aAAa,QAAA,OAAA,SAAA,KAAM;MAAA,CACpB;IACH;IACA;MACE,KAAK,GAAG;IACV;EAAA;AAEJ;;;AChGO,SAAS,kBAAkB;AACzB,SAAA;AACT;;;ACCgB,SAAA,KACd,SACA,MAKqB;AACf,QAAA,UAAS,QAAA,OAAA,SAAA,KAAM,WAAU;AAC/B,QAAM,aAAa,QAAA,OAAA,SAAA,KAAM;AAEzB,SAAO,IAAI,SAAS,KAAK,UAAU,OAAO,GAAG;IAC3C;IACA;IACA,SAAS;MACP,gBAAgB;MAChB,CAAC,wBAAwB,GAAG;MAC5B,GAAG,QAAA,OAAA,SAAA,KAAM;IACX;EAAA,CACD;AACH;;;;;;;;;;;ACrBA,IAAM,UAAN,MAAM,SAAQ;EAAd,cAAA;AACE,SAAA,QAAA,oBAAY,IAAA;EAAI;EAIhB,OAAc,SAAkB;AAC1B,QAAA,CAAC,SAAQ,UAAU;AACb,eAAA,WAAW,IAAI,SAAA;IACzB;AAEA,WAAO,SAAQ;EACjB;EAEQ,cAAiB,KAAa,cAAiB;AAC/CG,UAAAA,eAAU,4BAAc,YAAY;AAErC,SAAA,MAAM,IAAI,KAAKA,QAAO;AAEpBA,WAAAA;EACT;EAEA,IAAO,KAAa,cAAkB;AAC7B,WAAA,KAAK,MAAM,IAAI,GAAG,KAAK,KAAK,cAAc,KAAK,YAAY;EACpE;AACF;AAEA,IAAM,UAAU,QAAQ,OAAA;AAExB,IAAA,YAAe;;;ACtBR,IAAM,UAAU,MAAM;AAC3B,QAAM,SAAS,UAAA;AAEf,QAAM,YAAY,eAAe;IAC/B,QAAQ,CAAC,UAAU;AACV,aAAA,MAAM,QAAQ,IAAI,CAAC,UAAU,MAAM,IAAK,EAAE,OAAO,OAAO;IACjE;EAAA,CACD;AAEK,QAAA,OAAsC,cAAQ,MAAM;AACxD,UAAM,aAAsC,CAAA;AAC5C,UAAM,aAAmC,CAAA;AACrC,QAAA;AACH,KAAC,GAAG,SAAS,EAAE,QAAU,EAAA,QAAQ,CAAC,UAAU;AAC1C,OAAC,GAAG,KAAK,EAAE,QAAU,EAAA,QAAQ,CAAC,MAAM;AACnC,YAAI,EAAE,OAAO;AACX,cAAI,CAAC,OAAO;AACF,oBAAA;cACN,KAAK;cACL,UAAU,EAAE;YAAA;UAEhB;QAAA,OACK;AACL,cAAI,EAAE,MAAM;AACN,gBAAA,WAAW,EAAE,IAAI,GAAG;AACtB;YAAA,OACK;AACM,yBAAA,EAAE,IAAI,IAAI;YACvB;UACF;AAEA,qBAAW,KAAK;YACd,KAAK;YACL,OAAO;cACL,GAAG;YACL;UAAA,CACD;QACH;MAAA,CACD;IAAA,CACF;AAED,QAAI,OAAO;AACT,iBAAW,KAAK,KAAK;IACvB;AAEA,eAAW,QAAQ;AAEZ,WAAA;EAAA,GACN,CAAC,SAAS,CAAC;AAEd,QAAM,QAAQ,eAAe;IAC3B,QAAQ,CAAC,UACP,MAAM,QACH,IAAI,CAAC,UAAU,MAAM,KAAM,EAC3B,OAAO,OAAO,EACd,KAAK,CAAC,EACN,IAAI,CAAC,UAAU;MACd,KAAK;MACL,OAAO;QACL,GAAG;MACL;IAAA,EACA;EAAA,CACP;AAED,QAAM,cAAc,eAAe;IACjC,QAAQ,CAAC,UAAU;AACjB,YAAMC,eAAuC,CAAA;AAEvC,YAAA,QACH,IAAI,CAAC,UAAU,OAAO,gBAAgB,MAAM,OAAO,CAAE,EACrD;QAAQ,CAAC,UAAA;;AACR,kBAAA,MAAA,MAAA,KAAA,OAAO,aAAP,OAAA,SAAA,GAAiB,OAAO,MAAM,EAAA,MAA9B,OAAA,SAAA,GAAmC,aAAnC,OAAA,SAAA,GACI,OAAO,OAAA,EACR,QAAQ,CAAC,YAAY;AACpBA,yBAAY,KAAK;cACf,KAAK;cACL,OAAO;gBACL,KAAK;gBACL,MAAM;cACR;YAAA,CACD;UAAA,CAAA;QAAA;MACF;AAGAA,aAAAA;IACT;EAAA,CACD;AAEM,SAAA;IACL,CAAC,GAAG,MAAM,GAAG,aAAa,GAAG,KAAK;IAClC,CAAC,MAAM;AACE,aAAA,KAAK,UAAU,CAAC;IACzB;EAAA;AAEJ;AAEO,IAAM,kBAAkB,MAAM;AACnC,QAAM,SAAS,UAAA;AACf,QAAM,OAAO,QAAA;AAEb,QAAM,gBAAsB;IAC1B,UAAQ,IAAI,kCAAkC,CAAA,CAAE;EAAA;AAGlD,aAEI,0BAAA,8BAAA,EAAA,UAAA;QAAC,yBAAA,QAAA,EAAK,MAAK,WAAW,CAAA;IACrB,KAAK,IAAI,CAAC,OAAO,UAAA,6BACf,OAAO,EAAA,GAAG,OAAO,KAAK,YAAY,KAAK,UAAU,KAAK,CAAC,GAAA,CAAI,CAC7D;QAEC,0BAAA,8BAAA,EAAA,UAAA;UAAA;QAAC;QAAA;UACC,KAAK;UACL,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;QAAA;MAyBZ;UACA;QAAC;QAAA;UACC,UAAU,4BAAwB,aAAAC;YAChC,OAAO,QAAQ,YAAY,UAAU,aAAa;YAClD;cACE,iBAAiB;cACjB,MAAM;cACN,MAAM;YACR;UAAA,CACD;QAAA;MACH;IAAA,EAAA,CACF;QACA,yBAAC,QAAK,EAAA,MAAK,YAAY,CAAA;EACzB,EAAA,CAAA;AAEJ;AAMO,IAAM,OAAO,CAAC,EAAE,SAAA,MAA+C;AACpE,QAAM,SAAS,UAAA;AACf,QAAM,eAAe,gBAAA;AACrB,QAAM,CAAC,SAAS,UAAU,IAAU,eAAS,KAAK;AAElD,QACE,OAAO,aAAa,cAAc,oBAAoB,WACxD,EAAE,MAAM;AACF,QAAA,OAAO,aAAa,aAAa;AACnC;IACF;AAGA,UAAM,QAAQ,SAAS,KAAK,cAAc,uBAAuB;AACjE,UAAM,MAAM,SAAS,KAAK,cAAc,wBAAwB;AAGhE,QAAI,UAAU,SAAA,OAAA,SAAA,MAAO;AACd,WAAA,WAAW,YAAY,KAAK;AACjC,YAAM,OAAO,QAAQ;AACrB,cAAQ,OAAO;AACL,gBAAA;IACZ;AAGA,aAAA,OAAA,SAAA,MAAO,OAAA;AACP,WAAA,OAAA,SAAA,IAAK,OAAA;AAEL,eAAW,IAAI;EACjB,GAAG,CAAE,CAAA;AAEL,QAAM,UAED,0BAAA,8BAAA,EAAA,UAAA;IAAA;IACA;EACH,EAAA,CAAA;AAGF,MAAI,OAAO,UAAU;AACZ,WAAA;EACT;AAEA,MAAI,CAAC,SAAS;AACL,WAAA;EACT;AAEO,aAAA,+BAAa,KAAK,SAAS,IAAI;AACxC;AAEO,SAAS,KAAK,EAAE,UAAU,GAAG,MAAA,GAA2C;AAC7E,QAAM,SAAS,UAAA;AAOX,MAAA,CAAC,OAAO,UAAU;AACpB,eAAA,yBAAA,8BAAA,EAAU,SAAS,CAAA;EACrB;AAEO,aAAA,yBAAC,QAAA,EAAM,SAAS,CAAA;AACzB;AAEO,SAAS,KAAK,EAAE,UAAU,GAAG,MAAA,GAA2C;AAC7E,QAAM,SAAS,UAAA;AAOX,MAAA,CAAC,OAAO,UAAU;AACb,WAAA;EACT;AAEO,aAAA,yBAAC,QAAA,EAAM,SAAS,CAAA;AACzB;AAEO,SAAS,KAAK,EAAE,UAAU,GAAG,MAAA,GAA2C;AAC7E,QAAM,SAAS,UAAA;AAOX,MAAA,CAAC,OAAO,UAAU;AACb,WAAA;EACT;AAEA,aAAA,yBACG,QACC,EAAA,cAAA,yBAAC,OAAA,EAAI,IAAG,QAAQ,SAAS,CAAA,EAC3B,CAAA;AAEJ;AAEA,SAAS,OAAU,KAAe,IAAyB;AACnD,QAAA,OAAA,oBAAW,IAAA;AACV,SAAA,IAAI,OAAO,CAAC,SAAS;AACpB,UAAA,MAAM,GAAG,IAAI;AACf,QAAA,KAAK,IAAI,GAAG,GAAG;AACV,aAAA;IACT;AACA,SAAK,IAAI,GAAG;AACL,WAAA;EAAA,CACR;AACH;;;;;AC/QO,IAAM,UAAU,MAAM;AAC3B,QAAM,SAAS,UAAA;AAEf,QAAM,eAAe,eAAe;IAClC,QAAQ,CAAC,UAAU;AACjB,YAAMC,gBAAwC,CAAA;AAExC,YAAA,QACH,IAAI,CAAC,UAAU,OAAO,gBAAgB,MAAM,OAAO,CAAE,EACrD;QAAQ,CAAC,UACR;;AAAA,kBAAA,MAAA,MAAA,KAAA,OAAO,aAAP,OAAA,SAAA,GAAiB,OAAO,MAAM,EAAA,MAA9B,OAAA,SAAA,GAAmC,WAAnC,OAAA,SAAA,GACI,OAAO,CAAC,MAAM,EAAE,QAAQ,QAAA,EACzB,QAAQ,CAAC,UAAU;AAClBA,0BAAa,KAAK;cAChB,KAAK;cACL,OAAO,MAAM;cACb,UAAU,MAAM;YAAA,CACV;UAAA,CAAA;QAAA;MACT;AAGAA,aAAAA;IACT;EAAA,CACD;AAEK,QAAA,EAAE,QAAQ,IAAI,eAAe;IACjC,QAAQ,CAAC,WAAW;MAClB,SAAS,MAAM,QACZ,IAAI,CAAC,UAAU,MAAM,OAAQ,EAC7B,OAAO,OAAO,EACd,KAAK,CAAC,EACN,IAAI,CAAC,EAAE,UAAU,GAAG,OAAA,OAAc;QACjC,KAAK;QACL,OAAO;UACL,GAAG;UACH,0BAA0B;QAC5B;QACA;MAAA,EACA;IAAA;EACN,CACD;AAED,QAAM,aAAa,CAAC,GAAG,SAAS,GAAG,YAAY;AAE/C,aAEK,yBAAA,8BAAA,EAAA,UAAA,WAAW,IAAI,CAAC,OAAO;;QAEtB,6BAAC,OAAO,EAAA,GAAG,OAAO,KAAK,eAAe,MAAM,GAAG,IAAI,CAAC,GAAI,CAAA;GACzD,EACH,CAAA;AAEJ;;;;;;;;;ACmBgB,SAAA,aAAa,EAAE,OAAA,GAAiC;AAC9D,SAAO,MAAM,QAAQ,QAAQ,CAAC,UAAU;;AACtC,UAAM,QAAQ,OAAO,gBAAgB,MAAM,OAAO;AAClD,UAAM,UAAS,KAAA,OAAO,YAAP,OAAA,SAAA,GAAgB,QAAQ,MAAM,KAAA;AAC7C,QAAI,QAAQ;AACV,YAAM,cAAc,OAAO,MAAM,QAAQ,MAAM,QAAQ,CAAC;AACxD,YAAM,iBAAgB,eAAA,OAAA,SAAA,YAAa,YAAW,OAAO,QAAQ,WAAW,CAAA;AACxE,UAAI,OAAO,qBAAqB;AACxB,cAAA,sBAAsB,OAAO,QAAQ,YAAY;UACrD,OAAO;QAAA;AAGT,cAAM,UAAU;UACd,GAAG;UACH,GAAG,MAAM;UACT,GAAG,MAAM;QAAA;MAEb;AAEA,UAAI,OAAO,YAAY;AACrB,cAAM,aAAa,OAAO,QAAQ,YAAY,MAAM,OAAO,UAAU;MACvE;AAEA,YAAM,YAAY,OAAO;AAEzB,UAAI,WAAW;AACN,eAAA,QAAQ,SAAS,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE,MAAW;AAC9C,cAAA,GAAG,iBAAiB,SAAS;AAC/B,kBAAM,KAAK,GAAG;AACd,eAAG,QAAQ,GAAG,KAAK,CAAC,SAAc;AACzB,qBAAA;YAAA,CACR;UACH;AACqB,+BAAA,OAAO,CAAC,cAAc,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK;QAAA,CACjE;MACH;IACF;AAEA,UAAM,OACJ,MAAM,WAAW,aACb,MAAA,KAAA,MAAM,SAAQ,SAAd,OAAA,SAAA,GAAA,KAAA,IAAqB;MACnB,SAAS,OAAO,MAAM;MACtB;MACA,QAAQ,MAAM;MACd,YAAY,MAAM;IAAA,CAAA,IAEpB;AAEN,WAAO,OAAO,OAAO;MACnB;MACA,QAAO,MAAA,KAAA,MAAM,SAAQ,UAAd,OAAA,SAAA,GAAA,KAAA,EAAA;MACP,UAAS,MAAA,KAAA,MAAM,SAAQ,YAAd,OAAA,SAAA,GAAA,KAAA,EAAA;IAAwB,CAClC;EAAA,CACF;AACH;AAgRA,SAAS,qBAAwB,KAAQ,MAAqB,OAAY;AAEpE,MAAA,KAAK,WAAW,GAAG;AACnB,QAAY,KAAK,CAAC,CAAE,IAAI;EAC5B;AAEA,QAAM,CAAC,KAAK,GAAG,IAAI,IAAI;AAEnB,MAAA,MAAM,QAAQ,GAAG,GAAG;AACtB,yBAAqB,IAAI,OAAO,GAAG,CAAC,GAAG,MAAM,KAAK;EAAA,WACzC,cAAc,GAAG,GAAG;AAC7B,yBAAsB,IAAY,GAAI,GAAG,MAAM,KAAK;EACtD;AACF;;;AC1ZA,IAAI,UAAU;AAEP,SAAS,YAAY,OAA8B;;AACxD,MAAI,CAAC,MAAM,OAAO,MAAM,QAAQ,QAAQ;AACtC,UAAM,OAAO,QAAA;AACb,iBAAa,EAAE,QAAQ,MAAM,OAAQ,CAAA;EACvC;AAEA,MAAI,CAAC,SAAS;AACF,cAAA;AACV,KAAA,KAAA,OAAO,YAAP,OAAA,SAAA,GAAgB,aAAA;EAClB;AAEA,aAAQ,yBAAA,gBAAA,EAAe,QAAQ,MAAM,OAAQ,CAAA;AAC/C;;;ACKA,SAAS,kBAAkB,MAAkB;AAC3C,MAAI,gBAAgB,SAAS;AACpB,WAAA,IAAI,QAAQ,IAAI;EACd,WAAA,MAAM,QAAQ,IAAI,GAAG;AACvB,WAAA,IAAI,QAAQ,IAAI;EAAA,WACd,OAAO,SAAS,UAAU;AAC5B,WAAA,IAAI,QAAQ,IAAmB;EAAA,OACjC;AACL,WAAO,IAAI,QAAQ;EACrB;AACF;AAGO,SAAS,gBAAgB,SAA4B;AAC1D,SAAO,QAAQ,OAAO,CAAC,KAAc,WAAW;AACxC,UAAA,kBAAkB,kBAAkB,MAAM;AAChD,eAAW,CAAC,KAAK,KAAK,KAAK,gBAAgB,QAAA,GAAW;AAChD,UAAA,IAAI,KAAK,KAAK;IACpB;AACO,WAAA;EAAA,GACN,IAAI,QAAA,CAAS;AAClB;;;;ACtCO,SAAS,UAAU,OAAyB;AAC7C,UAAA,8BAAe,KAAK,GAAG;AAClB,WAAA;EACT;AAEA,MAAI,OAAO,UAAU,YAAY,CAAC,MAAM,OAAO;AAC7C,UAAM,QAAQ;MACZ,QAAQ;MACR,SAAS,QAAQ,QAAQ,EACtB,KAAK,MAAM;AAwDV,kBAAU,OAAO,6BAA6B;MAAA,CAC/C,EACA,KAAK,CAAC,YAAY;AACjB,cAAM,MAAM,QAAQ;AACpB,cAAM,MAAM,SAAS;MAAA,CACtB,EACA,MAAM,CAAC,QAAQ;AACd,cAAM,MAAM,SAAS;AACrB,cAAM,MAAM,QAAQ;MAAA,CACrB;IAAA;EAEP;AAEI,MAAA,MAAM,MAAM,WAAW,WAAW;AACpC,UAAM,MAAM,MAAM;EACpB;AAEA,SAAO,MAAM,MAAM;AACrB;;;ACvFO,SAAS,YACd,UAC2C;AAC3C,QAAM,SAAS,UAAA;AAEf,SAAQ,UAAU,SAAqB;AACjC,QAAA;AACF,YAAM,MAAM,MAAM,SAAS,GAAG,IAAI;AAE9B,UAAA,WAAW,GAAG,GAAG;AACb,cAAA;MACR;AAEO,aAAA;IAAA,SACA,KAAK;AACR,UAAA,WAAW,GAAG,GAAG;AACZ,eAAA;UACL,OAAO,gBAAgB;YACrB,GAAG;YACH,eAAe,OAAO,MAAM;UAAA,CAC7B;QAAA;MAEL;AAEM,YAAA;IACR;EAAA;AAEJ;",
  "names": ["object", "hexadecimal", "jsesc", "json", "hex", "context", "preloadMeta", "jsesc", "assetScripts"]
}
