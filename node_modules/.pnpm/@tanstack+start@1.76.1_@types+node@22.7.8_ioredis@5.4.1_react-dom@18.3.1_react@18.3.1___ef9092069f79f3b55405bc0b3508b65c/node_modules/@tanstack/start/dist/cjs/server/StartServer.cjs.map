{"version":3,"file":"StartServer.cjs","sources":["../../../src/server/StartServer.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Context } from '@tanstack/react-cross-context'\nimport { RouterProvider } from '@tanstack/react-router'\nimport jsesc from 'jsesc'\nimport { AfterEachMatch } from '../client/serialization'\nimport type { AnyRouter } from '@tanstack/react-router'\n\nexport function StartServer<TRouter extends AnyRouter>(props: {\n  router: TRouter\n}) {\n  props.router.AfterEachMatch = AfterEachMatch\n  props.router.serializer = (value) =>\n    jsesc(value, {\n      isScriptContext: true,\n      wrap: true,\n      json: true,\n    })\n\n  const hydrationContext = Context.get('TanStackRouterHydrationContext', {})\n\n  const hydrationCtxValue = React.useMemo(\n    () => ({\n      router: props.router.dehydrate(),\n      payload: props.router.options.dehydrate?.(),\n    }),\n    [props.router],\n  )\n\n  return (\n    <hydrationContext.Provider value={hydrationCtxValue}>\n      <RouterProvider router={props.router} />\n    </hydrationContext.Provider>\n  )\n}\n"],"names":["AfterEachMatch","Context","React","jsx","RouterProvider"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAOO,SAAS,YAAuC,OAEpD;AACD,QAAM,OAAO,iBAAiBA;AAC9B,QAAM,OAAO,aAAa,CAAC,UACzB,MAAM,OAAO;AAAA,IACX,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,MAAM;AAAA,EAAA,CACP;AAEH,QAAM,mBAAmBC,kBAAA,QAAQ,IAAI,kCAAkC,CAAE,CAAA;AAEzE,QAAM,oBAAoBC,iBAAM;AAAA,IAC9B,MAAO;;AAAA;AAAA,QACL,QAAQ,MAAM,OAAO,UAAU;AAAA,QAC/B,UAAS,iBAAM,OAAO,SAAQ,cAArB;AAAA,MAAiC;AAAA;AAAA,IAE5C,CAAC,MAAM,MAAM;AAAA,EAAA;AAIb,SAAAC,2BAAAA,IAAC,iBAAiB,UAAjB,EAA0B,OAAO,mBAChC,UAAAA,2BAAA,IAACC,YAAe,gBAAA,EAAA,QAAQ,MAAM,OAAQ,CAAA,EACxC,CAAA;AAEJ;;"}