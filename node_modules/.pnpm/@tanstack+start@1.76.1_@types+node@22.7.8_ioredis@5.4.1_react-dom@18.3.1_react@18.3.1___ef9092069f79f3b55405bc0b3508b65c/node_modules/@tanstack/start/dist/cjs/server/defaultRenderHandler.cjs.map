{"version":3,"file":"defaultRenderHandler.cjs","sources":["../../../src/server/defaultRenderHandler.tsx"],"sourcesContent":["import ReactDOMServer from 'react-dom/server'\nimport { StartServer } from './StartServer'\nimport type { HandlerCallback } from './defaultStreamHandler'\nimport type { AnyRouter } from '@tanstack/react-router'\n\nexport const defaultRenderHandler: HandlerCallback<AnyRouter> = ({\n  router,\n  responseHeaders,\n}) => {\n  try {\n    const html = ReactDOMServer.renderToString(<StartServer router={router} />)\n\n    return new Response(`<!DOCTYPE html>${html}`, {\n      status: router.state.statusCode,\n      headers: responseHeaders,\n    })\n  } catch (error) {\n    console.error('Render to string error:', error)\n    return new Response('Internal Server Error', {\n      status: 500,\n      headers: responseHeaders,\n    })\n  }\n}\n"],"names":["jsx","StartServer"],"mappings":";;;;;AAKO,MAAM,uBAAmD,CAAC;AAAA,EAC/D;AAAA,EACA;AACF,MAAM;AACA,MAAA;AACF,UAAM,OAAO,eAAe,eAAgBA,2BAAAA,IAAAC,YAAAA,aAAA,EAAY,OAAgB,CAAA,CAAE;AAE1E,WAAO,IAAI,SAAS,kBAAkB,IAAI,IAAI;AAAA,MAC5C,QAAQ,OAAO,MAAM;AAAA,MACrB,SAAS;AAAA,IAAA,CACV;AAAA,WACM,OAAO;AACN,YAAA,MAAM,2BAA2B,KAAK;AACvC,WAAA,IAAI,SAAS,yBAAyB;AAAA,MAC3C,QAAQ;AAAA,MACR,SAAS;AAAA,IAAA,CACV;AAAA,EACH;AACF;;"}