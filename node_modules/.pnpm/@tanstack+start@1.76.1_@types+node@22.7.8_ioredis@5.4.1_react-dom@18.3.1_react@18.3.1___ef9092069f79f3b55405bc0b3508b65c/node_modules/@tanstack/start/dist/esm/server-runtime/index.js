import { Readable } from "node:stream";
import { getEvent, getRequestHeaders } from "vinxi/http";
import { fetcher } from "../client-runtime/fetcher.js";
import { getBaseUrl } from "../client-runtime/getBaseUrl.js";
import { handleServerRequest } from "../server-handler/index.js";
function createIncomingMessage(url, method, headers) {
  const readable = new Readable({ objectMode: true });
  readable._read = () => {
  };
  readable.url = url;
  readable.method = method;
  readable.headers = headers;
  readable.connection = {};
  readable.getHeaders = () => {
    return headers;
  };
  return readable;
}
function createServerReference(_fn, id, name) {
  const functionUrl = getBaseUrl("http://localhost:3000", id, name);
  const proxyFn = (...args) => fetcher(functionUrl, args, async (request) => {
    const event = getEvent();
    const ogRequestHeaders = getRequestHeaders(event);
    Object.entries(ogRequestHeaders).forEach(([key, value]) => {
      if (!request.headers.has(key)) {
        request.headers.append(key, value);
      }
    });
    return handleServerRequest(request);
  });
  return Object.assign(proxyFn, {
    url: functionUrl
  });
}
export {
  createIncomingMessage,
  createServerReference
};
//# sourceMappingURL=index.js.map
