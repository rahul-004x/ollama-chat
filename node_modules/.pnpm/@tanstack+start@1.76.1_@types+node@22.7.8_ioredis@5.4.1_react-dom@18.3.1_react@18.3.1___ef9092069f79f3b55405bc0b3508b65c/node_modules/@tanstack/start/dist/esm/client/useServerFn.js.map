{"version":3,"file":"useServerFn.js","sources":["../../../src/client/useServerFn.ts"],"sourcesContent":["import { isRedirect, useRouter } from '@tanstack/react-router'\n\nexport function useServerFn<T extends (...deps: Array<any>) => Promise<any>>(\n  serverFn: T,\n): (...args: Parameters<T>) => ReturnType<T> {\n  const router = useRouter()\n\n  return (async (...args: Array<any>) => {\n    try {\n      const res = await serverFn(...args)\n\n      if (isRedirect(res)) {\n        throw res\n      }\n\n      return res\n    } catch (err) {\n      if (isRedirect(err)) {\n        router.navigate(\n          router.resolveRedirect({\n            ...err,\n            _fromLocation: router.state.location,\n          }),\n        )\n      }\n\n      throw err\n    }\n  }) as any\n}\n"],"names":[],"mappings":";AAEO,SAAS,YACd,UAC2C;AAC3C,QAAM,SAAS;AAEf,SAAQ,UAAU,SAAqB;AACjC,QAAA;AACF,YAAM,MAAM,MAAM,SAAS,GAAG,IAAI;AAE9B,UAAA,WAAW,GAAG,GAAG;AACb,cAAA;AAAA,MACR;AAEO,aAAA;AAAA,aACA,KAAK;AACR,UAAA,WAAW,GAAG,GAAG;AACZ,eAAA;AAAA,UACL,OAAO,gBAAgB;AAAA,YACrB,GAAG;AAAA,YACH,eAAe,OAAO,MAAM;AAAA,UAAA,CAC7B;AAAA,QAAA;AAAA,MAEL;AAEM,YAAA;AAAA,IACR;AAAA,EAAA;AAEJ;"}