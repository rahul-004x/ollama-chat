{"version":3,"file":"Meta.js","sources":["../../../src/client/Meta.tsx"],"sourcesContent":["import { ScriptOnce, useRouter, useRouterState } from '@tanstack/react-router'\nimport * as React from 'react'\nimport { createPortal } from 'react-dom'\nimport jsesc from 'jsesc'\nimport { Context } from '@tanstack/react-cross-context'\nimport { Asset } from './Asset'\nimport type { RouterManagedTag } from '@tanstack/react-router'\n\nexport const useMeta = () => {\n  const router = useRouter()\n\n  const routeMeta = useRouterState({\n    select: (state) => {\n      return state.matches.map((match) => match.meta!).filter(Boolean)\n    },\n  })\n\n  const meta: Array<RouterManagedTag> = React.useMemo(() => {\n    const resultMeta: Array<RouterManagedTag> = []\n    const metaByName: Record<string, true> = {}\n    let title: RouterManagedTag | undefined\n    ;[...routeMeta].reverse().forEach((metas) => {\n      ;[...metas].reverse().forEach((m) => {\n        if (m.title) {\n          if (!title) {\n            title = {\n              tag: 'title',\n              children: m.title,\n            }\n          }\n        } else {\n          if (m.name) {\n            if (metaByName[m.name]) {\n              return\n            } else {\n              metaByName[m.name] = true\n            }\n          }\n\n          resultMeta.push({\n            tag: 'meta',\n            attrs: {\n              ...m,\n            },\n          })\n        }\n      })\n    })\n\n    if (title) {\n      resultMeta.push(title)\n    }\n\n    resultMeta.reverse()\n\n    return resultMeta\n  }, [routeMeta])\n\n  const links = useRouterState({\n    select: (state) =>\n      state.matches\n        .map((match) => match.links!)\n        .filter(Boolean)\n        .flat(1)\n        .map((link) => ({\n          tag: 'link',\n          attrs: {\n            ...link,\n          },\n        })) as Array<RouterManagedTag>,\n  })\n\n  const preloadMeta = useRouterState({\n    select: (state) => {\n      const preloadMeta: Array<RouterManagedTag> = []\n\n      state.matches\n        .map((match) => router.looseRoutesById[match.routeId]!)\n        .forEach((route) =>\n          router.manifest?.routes[route.id]?.preloads\n            ?.filter(Boolean)\n            .forEach((preload) => {\n              preloadMeta.push({\n                tag: 'link',\n                attrs: {\n                  rel: 'modulepreload',\n                  href: preload,\n                },\n              })\n            }),\n        )\n\n      return preloadMeta\n    },\n  })\n\n  return uniqBy(\n    [...meta, ...preloadMeta, ...links] as Array<RouterManagedTag>,\n    (d) => {\n      return JSON.stringify(d)\n    },\n  )\n}\n\nexport const useMetaElements = () => {\n  const router = useRouter()\n  const meta = useMeta()\n\n  const dehydratedCtx = React.useContext(\n    Context.get('TanStackRouterHydrationContext', {}),\n  )\n\n  return (\n    <>\n      <meta name=\"tsr-meta\" />\n      {meta.map((asset, i) => (\n        <Asset {...asset} key={`tsr-meta-${JSON.stringify(asset)}`} />\n      ))}\n      <>\n        <ScriptOnce\n          log={false}\n          children={`\n__TSR__ = {\n  matches: [],\n  streamedValues: {},\n  initMatch: (index) => {\n    Object.entries(__TSR__.matches[index].extracted).forEach(([id, ex]) => {\n      if (ex.type === 'stream') {\n        let controller;\n        ex.value = new ReadableStream({\n          start(c) { controller = c; }\n        })\n        ex.value.controller = controller\n      } else if (ex.type === 'promise') {\n        let r, j\n        ex.value = new Promise((r_, j_) => { r = r_, j = j_ })\n        ex.resolve = r; ex.reject = j\n      }\n    })\n  },\n  cleanScripts: () => {\n    document.querySelectorAll('.tsr-once').forEach((el) => {\n      el.remove()\n    })\n  },\n}`}\n        />\n        <ScriptOnce\n          children={`__TSR__.dehydrated = ${jsesc(\n            router.options.transformer.stringify(dehydratedCtx),\n            {\n              isScriptContext: true,\n              wrap: true,\n              json: true,\n            },\n          )}`}\n        />\n      </>\n      <meta name=\"/tsr-meta\" />\n    </>\n  )\n}\n\n/**\n * @description The `Meta` component is used to render meta tags and links for the current route.\n * It should be rendered in the `<head>` of your document.\n */\nexport const Meta = ({ children }: { children?: React.ReactNode }) => {\n  const router = useRouter()\n  const metaElements = useMetaElements()\n  const [mounted, setMounted] = React.useState(false)\n\n  React[\n    typeof document !== 'undefined' ? 'useLayoutEffect' : 'useEffect'\n  ](() => {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    // Remove all meta between the tsr meta tags\n    const start = document.head.querySelector('meta[name=\"tsr-meta\"]')\n    const end = document.head.querySelector('meta[name=\"/tsr-meta\"]')\n\n    // Iterate over all head children and remove them until we reach the end\n    let current = start?.nextElementSibling\n    while (current && current !== end) {\n      const next = current.nextElementSibling\n      current.remove()\n      current = next\n    }\n\n    // Remove the markers\n    start?.remove()\n    end?.remove()\n\n    setMounted(true)\n  }, [])\n\n  const all = (\n    <>\n      {metaElements}\n      {children}\n    </>\n  )\n\n  if (router.isServer) {\n    return all\n  }\n\n  if (!mounted) {\n    return null\n  }\n\n  return createPortal(all, document.head)\n}\n\nexport function Html({ children, ...props }: React.HTMLProps<HTMLHtmlElement>) {\n  const router = useRouter()\n\n  // warning(\n  //   !Object.keys(props).length,\n  //   'Passing props other than children to the Html component will be supported very soon in React 19.',\n  // )\n\n  if (!router.isServer) {\n    return <>{children}</>\n  }\n\n  return <html>{children}</html>\n}\n\nexport function Head({ children, ...props }: React.HTMLProps<HTMLHeadElement>) {\n  const router = useRouter()\n\n  // warning(\n  //   !Object.keys(props).length,\n  //   'Passing props other than children to the Head component will be supported very soon in React 19.',\n  // )\n\n  if (!router.isServer) {\n    return children\n  }\n\n  return <head>{children}</head>\n}\n\nexport function Body({ children, ...props }: React.HTMLProps<HTMLBodyElement>) {\n  const router = useRouter()\n\n  // warning(\n  //   !Object.keys(props).length,\n  //   'Passing props other than children to the Body component will be supported very soon in React 19.',\n  // )\n\n  if (!router.isServer) {\n    return children\n  }\n\n  return (\n    <body>\n      <div id=\"root\">{children}</div>\n    </body>\n  )\n}\n\nfunction uniqBy<T>(arr: Array<T>, fn: (item: T) => string) {\n  const seen = new Set<string>()\n  return arr.filter((item) => {\n    const key = fn(item)\n    if (seen.has(key)) {\n      return false\n    }\n    seen.add(key)\n    return true\n  })\n}\n"],"names":["preloadMeta"],"mappings":";;;;;;;;AAQO,MAAM,UAAU,MAAM;AAC3B,QAAM,SAAS;AAEf,QAAM,YAAY,eAAe;AAAA,IAC/B,QAAQ,CAAC,UAAU;AACV,aAAA,MAAM,QAAQ,IAAI,CAAC,UAAU,MAAM,IAAK,EAAE,OAAO,OAAO;AAAA,IACjE;AAAA,EAAA,CACD;AAEK,QAAA,OAAgC,MAAM,QAAQ,MAAM;AACxD,UAAM,aAAsC,CAAA;AAC5C,UAAM,aAAmC,CAAA;AACrC,QAAA;AACH,KAAC,GAAG,SAAS,EAAE,QAAU,EAAA,QAAQ,CAAC,UAAU;AAC1C,OAAC,GAAG,KAAK,EAAE,QAAU,EAAA,QAAQ,CAAC,MAAM;AACnC,YAAI,EAAE,OAAO;AACX,cAAI,CAAC,OAAO;AACF,oBAAA;AAAA,cACN,KAAK;AAAA,cACL,UAAU,EAAE;AAAA,YAAA;AAAA,UAEhB;AAAA,QAAA,OACK;AACL,cAAI,EAAE,MAAM;AACN,gBAAA,WAAW,EAAE,IAAI,GAAG;AACtB;AAAA,YAAA,OACK;AACM,yBAAA,EAAE,IAAI,IAAI;AAAA,YACvB;AAAA,UACF;AAEA,qBAAW,KAAK;AAAA,YACd,KAAK;AAAA,YACL,OAAO;AAAA,cACL,GAAG;AAAA,YACL;AAAA,UAAA,CACD;AAAA,QACH;AAAA,MAAA,CACD;AAAA,IAAA,CACF;AAED,QAAI,OAAO;AACT,iBAAW,KAAK,KAAK;AAAA,IACvB;AAEA,eAAW,QAAQ;AAEZ,WAAA;AAAA,EAAA,GACN,CAAC,SAAS,CAAC;AAEd,QAAM,QAAQ,eAAe;AAAA,IAC3B,QAAQ,CAAC,UACP,MAAM,QACH,IAAI,CAAC,UAAU,MAAM,KAAM,EAC3B,OAAO,OAAO,EACd,KAAK,CAAC,EACN,IAAI,CAAC,UAAU;AAAA,MACd,KAAK;AAAA,MACL,OAAO;AAAA,QACL,GAAG;AAAA,MACL;AAAA,IAAA,EACA;AAAA,EAAA,CACP;AAED,QAAM,cAAc,eAAe;AAAA,IACjC,QAAQ,CAAC,UAAU;AACjB,YAAMA,eAAuC,CAAA;AAEvC,YAAA,QACH,IAAI,CAAC,UAAU,OAAO,gBAAgB,MAAM,OAAO,CAAE,EACrD;AAAA,QAAQ,CAAC,UAAA;;AACR,0CAAO,aAAP,mBAAiB,OAAO,MAAM,QAA9B,mBAAmC,aAAnC,mBACI,OAAO,SACR,QAAQ,CAAC,YAAY;AACpBA,yBAAY,KAAK;AAAA,cACf,KAAK;AAAA,cACL,OAAO;AAAA,gBACL,KAAK;AAAA,gBACL,MAAM;AAAA,cACR;AAAA,YAAA,CACD;AAAA,UAAA;AAAA;AAAA,MACF;AAGAA,aAAAA;AAAAA,IACT;AAAA,EAAA,CACD;AAEM,SAAA;AAAA,IACL,CAAC,GAAG,MAAM,GAAG,aAAa,GAAG,KAAK;AAAA,IAClC,CAAC,MAAM;AACE,aAAA,KAAK,UAAU,CAAC;AAAA,IACzB;AAAA,EAAA;AAEJ;AAEO,MAAM,kBAAkB,MAAM;AACnC,QAAM,SAAS;AACf,QAAM,OAAO;AAEb,QAAM,gBAAgB,MAAM;AAAA,IAC1B,QAAQ,IAAI,kCAAkC,EAAE;AAAA,EAAA;AAGlD,SAEI,qBAAA,UAAA,EAAA,UAAA;AAAA,IAAC,oBAAA,QAAA,EAAK,MAAK,WAAW,CAAA;AAAA,IACrB,KAAK,IAAI,CAAC,OAAO,oCACf,OAAO,EAAA,GAAG,OAAO,KAAK,YAAY,KAAK,UAAU,KAAK,CAAC,IAAI,CAC7D;AAAA,IAEC,qBAAA,UAAA,EAAA,UAAA;AAAA,MAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAK;AAAA,UACL,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAA;AAAA,MAyBZ;AAAA,MACA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,UAAU,wBAAwB;AAAA,YAChC,OAAO,QAAQ,YAAY,UAAU,aAAa;AAAA,YAClD;AAAA,cACE,iBAAiB;AAAA,cACjB,MAAM;AAAA,cACN,MAAM;AAAA,YACR;AAAA,UAAA,CACD;AAAA,QAAA;AAAA,MACH;AAAA,IAAA,GACF;AAAA,IACA,oBAAC,QAAK,EAAA,MAAK,YAAY,CAAA;AAAA,EACzB,EAAA,CAAA;AAEJ;AAMO,MAAM,OAAO,CAAC,EAAE,eAA+C;AACpE,QAAM,SAAS;AACf,QAAM,eAAe;AACrB,QAAM,CAAC,SAAS,UAAU,IAAI,MAAM,SAAS,KAAK;AAElD,QACE,OAAO,aAAa,cAAc,oBAAoB,WACxD,EAAE,MAAM;AACF,QAAA,OAAO,aAAa,aAAa;AACnC;AAAA,IACF;AAGA,UAAM,QAAQ,SAAS,KAAK,cAAc,uBAAuB;AACjE,UAAM,MAAM,SAAS,KAAK,cAAc,wBAAwB;AAGhE,QAAI,UAAU,+BAAO;AACd,WAAA,WAAW,YAAY,KAAK;AACjC,YAAM,OAAO,QAAQ;AACrB,cAAQ,OAAO;AACL,gBAAA;AAAA,IACZ;AAGA,mCAAO;AACP,+BAAK;AAEL,eAAW,IAAI;AAAA,EACjB,GAAG,CAAE,CAAA;AAEL,QAAM,MAED,qBAAA,UAAA,EAAA,UAAA;AAAA,IAAA;AAAA,IACA;AAAA,EACH,EAAA,CAAA;AAGF,MAAI,OAAO,UAAU;AACZ,WAAA;AAAA,EACT;AAEA,MAAI,CAAC,SAAS;AACL,WAAA;AAAA,EACT;AAEO,SAAA,aAAa,KAAK,SAAS,IAAI;AACxC;AAEO,SAAS,KAAK,EAAE,UAAU,GAAG,SAA2C;AAC7E,QAAM,SAAS;AAOX,MAAA,CAAC,OAAO,UAAU;AACpB,2CAAU,SAAS,CAAA;AAAA,EACrB;AAEO,SAAA,oBAAC,UAAM,SAAS,CAAA;AACzB;AAEO,SAAS,KAAK,EAAE,UAAU,GAAG,SAA2C;AAC7E,QAAM,SAAS;AAOX,MAAA,CAAC,OAAO,UAAU;AACb,WAAA;AAAA,EACT;AAEO,SAAA,oBAAC,UAAM,SAAS,CAAA;AACzB;AAEO,SAAS,KAAK,EAAE,UAAU,GAAG,SAA2C;AAC7E,QAAM,SAAS;AAOX,MAAA,CAAC,OAAO,UAAU;AACb,WAAA;AAAA,EACT;AAEA,6BACG,QACC,EAAA,UAAA,oBAAC,SAAI,IAAG,QAAQ,SAAS,CAAA,EAC3B,CAAA;AAEJ;AAEA,SAAS,OAAU,KAAe,IAAyB;AACnD,QAAA,2BAAW;AACV,SAAA,IAAI,OAAO,CAAC,SAAS;AACpB,UAAA,MAAM,GAAG,IAAI;AACf,QAAA,KAAK,IAAI,GAAG,GAAG;AACV,aAAA;AAAA,IACT;AACA,SAAK,IAAI,GAAG;AACL,WAAA;AAAA,EAAA,CACR;AACH;"}