import { jsx } from "react/jsx-runtime";
import * as React from "react";
import { Context } from "@tanstack/react-cross-context";
import { RouterProvider } from "@tanstack/react-router";
import jsesc from "jsesc";
import { AfterEachMatch } from "../client/serialization.js";
function StartServer(props) {
  props.router.AfterEachMatch = AfterEachMatch;
  props.router.serializer = (value) => jsesc(value, {
    isScriptContext: true,
    wrap: true,
    json: true
  });
  const hydrationContext = Context.get("TanStackRouterHydrationContext", {});
  const hydrationCtxValue = React.useMemo(
    () => {
      var _a, _b;
      return {
        router: props.router.dehydrate(),
        payload: (_b = (_a = props.router.options).dehydrate) == null ? void 0 : _b.call(_a)
      };
    },
    [props.router]
  );
  return /* @__PURE__ */ jsx(hydrationContext.Provider, { value: hydrationCtxValue, children: /* @__PURE__ */ jsx(RouterProvider, { router: props.router }) });
}
export {
  StartServer
};
//# sourceMappingURL=StartServer.js.map
